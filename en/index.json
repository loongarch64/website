[{"categories":null,"content":"This file is a user guide to the GNU assembler as (GNU Binutils) version 2.35.\nThis document is distributed under the terms of the GNU Free Documentation License. A copy of the license is included in the section entitled “GNU Free Documentation License”.\nOverview Here is a brief summary of how to invoke as. For details, see Command-Line Options.\nas [ -a [ cdghlns ][=file]] [ - alternate] [ -D ]\n[ - compress-debug-sections] [ - nocompress-debug-sections]\n[ - debug-prefix-map old=new]\n[ - defsym sym=val] [ -f ] [ -g ] [ - gstabs]\n[ - gstabs+] [ - gdwarf-] [ - gdwarf-sections]\n[ - gdwarf-cie-version=VERSION]\n[ - help] [ -I dir] [ -J ]\n[ -K ] [ -L ] [ - listing-lhs-width=NUM]\n[ - listing-lhs-width2=NUM] [ - listing-rhs-width=NUM]\n[ - listing-cont-lines=NUM] [ - keep-locals]\n[ - no-pad-sections]\n[ -o objfile] [ -R ]\n[ - hash-size=NUM] [ - reduce-memory-overheads]\n[ - statistics]\n[ -v ] [ -version ] [ - version]\n[ -W ] [ - warn] [ - fatal-warnings] [ -w ] [ -x ]\n[ -Z ] [ @ FILE]\n[ - sectname-subst] [ - size-check=[error|warning]]\n[ - elf-stt-common=[no|yes]]\n[ - generate-missing-build-notes=[no|yes]]\n[ - target-help] [target-options]\n[ - |files …]\nTarget Loongarch options:\n[ -mabi =ABI]\n@file\nRead command-line options from file. The options read are inserted in place of the original @file option. If file does not exist, or cannot be read, then the option will be treated literally, and not removed. Options in file are separated by whitespace. A whitespace character may be included in an option by surrounding the entire option in either single or double quotes. Any character (including a backslash) may be included by prefixing the character to be included with a backslash. The file may itself contain additional @file options; any such options will be processed recursively.  -a[cdghlmns]\nTurn on listings, in any of a variety of ways:  -ac\nomit false conditionals  -ad\nomit debugging directives  -ag\ninclude general information, like as version and options passed  -ah\ninclude high-level source  -al\ninclude assembly  -am\ninclude macro expansions  -an\nomit forms processing  -as\ninclude symbols  =file\nset the name of the listing file You may combine these options; for example, use '-aln' for assembly listing without forms processing. The '=file' option, if used, must be the last one. By itself, '-a' defaults to '-ahls'.  --alternate\nBegin in alternate macro mode. See [`.altmacro`](Altmacro.html#Altmacro).  --compress-debug-sections\nCompress DWARF debug sections using zlib with SHF_COMPRESSED from the ELF ABI. The resulting object file may not be compatible with older linkers and object file utilities. Note if compression would make a given section _larger_ then it is not compressed.  --compress-debug-sections=none\n--compress-debug-sections=zlib\n--compress-debug-sections=zlib-gnu\n--compress-debug-sections=zlib-gabi\nThese options control how DWARF debug sections are compressed. \\--compress- debug-sections=none is equivalent to \\--nocompress-debug-sections. \\--compress-debug-sections=zlib and \\--compress-debug-sections=zlib-gabi are equivalent to \\--compress-debug-sections. \\--compress-debug-sections=zlib-gnu compresses DWARF debug sections using zlib. The debug sections are renamed to begin with '.zdebug'. Note if compression would make a given section _larger_ then it is not compressed nor renamed.  --nocompress-debug-sections\nDo not compress DWARF debug sections. This is usually the default for all targets except the x86/x86_64, but a configure time option can be used to override this.  -D\nIgnored. This option is accepted for script compatibility with calls to other assemblers.  --debug-prefix-map old=new\nWhen assembling files in directory old, record debugging information describing them as in new instead.  --defsym sym=value\nDefine the symbol sym to be value before assembling the input file. value must be an integer constant. As in C, a leading '0x' indicates a hexadecimal value, and a leading '0' indicates an octal value. The value of the symbol can be overridden inside a source file via the use of a `.set` pseudo-op.  -f\n\u0026quot;fast\u0026quot;--skip whitespace and comment preprocessing (assume source is compiler output).  -g\n--gen-debug\nGenerate debugging information for each assembler source line using whichever debug format is preferred by the target. This currently means either STABS, ECOFF or DWARF2.  --gstabs\nGenerate stabs debugging information for each assembler line. This may help debugging assembler code, if the debugger can handle it.  --gstabs+\nGenerate stabs debugging information for each assembler line, with GNU extensions that probably only gdb can handle, and that could make other debuggers crash or refuse to read your program. This may help debugging assembler code. Currently the only GNU extension is the location of the current working directory at assembling time.  --gdwarf-2\nGenerate DWARF2 debugging information for each assembler line. This may help debugging assembler code, if the debugger can handle it. Note--this option is only supported by some targets, not all of them.  --gdwarf-3\nThis option is the same as the \\--gdwarf-2 option, except that it allows for the possibility of the generation of extra debug information as per version 3 of the DWARF specification. Note - enabling this option does not guarantee the generation of any extra infortmation, the choice to do so is on a per target basis.  --gdwarf-4\nThis option is the same as the \\--gdwarf-2 option, except that it allows for the possibility of the generation of extra debug information as per version 4 of the DWARF specification. Note - enabling this option does not guarantee the generation of any extra infortmation, the choice to do so is on a per target basis.  --gdwarf-5\nThis option is the same as the \\--gdwarf-2 option, except that it allows for the possibility of the generation of extra debug information as per version 5 of the DWARF specification. Note - enabling this option does not guarantee the generation of any extra infortmation, the choice to do so is on a per target basis.  --gdwarf-sections\nInstead of creating a .debug_line section, create a series of .debug_line.foo sections where foo is the name of the corresponding code section. For example a code section called .text.func will have its dwarf line number information placed into a section called .debug_line.text.func. If the code section is just called .text then debug line section will still be called just .debug_line without any suffix.  --gdwarf-cie-version=version\nControl which version of DWARF Common Information Entries (CIEs) are produced. When this flag is not specificed the default is version 1, though some targets can modify this default. Other possible values for version are 3 or 4.  --size-check=error\n--size-check=warning\nIssue an error or warning for invalid ELF .size directive.  --elf-stt-common=no\n--elf-stt-common=yes\nThese options control whether the ELF assembler should generate common symbols with the `STT_COMMON` type. The default can be controlled by a configure option \\--enable-elf-stt-common.  --generate-missing-build-notes=yes\n--generate-missing-build-notes=no\nThese options control whether the ELF assembler should generate GNU Build attribute notes if none are present in the input sources. The default can be controlled by the \\--enable-generate-build-notes configure option.  --help\nPrint a summary of the command-line options and exit.  --target-help\nPrint a summary of all target specific options and exit.  -I dir\nAdd directory dir to the search list for `.include` directives.  -J\nDon't warn about signed overflow.  -K\nIssue warnings when difference tables altered for long displacements.  -L\n--keep-locals\nKeep (in the symbol table) local symbols. These symbols start with system- specific local label prefixes, typically '.L' for ELF systems or 'L' for traditional a.out systems. See [Symbol Names](Symbol-Names.html#Symbol-Names).  --listing-lhs-width=number\nSet the maximum width, in words, of the output data column for an assembler listing to number.  --listing-lhs-width2=number\nSet the maximum width, in words, of the output data column for continuation lines in an assembler listing to number.  --listing-rhs-width=number\nSet the maximum width of an input source line, as displayed in a listing, to number bytes.  --listing-cont-lines=number\nSet the maximum number of lines printed in a listing for a single line of input to number \\+ 1.  --no-pad-sections\nStop the assembler for padding the ends of output sections to the alignment of that section. The default is to pad the sections, but this can waste space which might be needed on targets which have tight memory constraints.  -o objfile\nName the object-file output from `as` objfile.  -R\nFold the data section into the text section.  --hash-size=number\nSet the default size of GAS's hash tables to a prime number close to number. Increasing this value can reduce the length of time it takes the assembler to perform its tasks, at the expense of increasing the assembler's memory requirements. Similarly reducing this value can reduce the memory requirements at the expense of speed.  --reduce-memory-overheads\nThis option reduces GAS's memory requirements, at the expense of making the assembly processes slower. Currently this switch is a synonym for '\\--hash- size=4051', but in the future it may have other effects as well.  --sectname-subst\nHonor substitution sequences in section names. See [`.section name`](Section.html#Section-Name-Substitutions).  --statistics\nPrint the maximum space (in bytes) and total time (in seconds) used by assembly.  --strip-local-absolute\nRemove local absolute symbols from the outgoing symbol table.  -v\n-version\nPrint the `as` version.  --version\nPrint the `as` version and exit.  -W\n--no-warn\nSuppress warning messages.  --fatal-warnings\nTreat warnings as errors.  --warn\nDon't suppress warning messages or treat them as errors.  -w\nIgnored.  -x\nIgnored.  -Z\nGenerate an object file even after errors.  -- | files …\nStandard input, or source files to assemble. ","permalink":"/en/docs/gas/","series":null,"tags":null,"title":"GNU as user guide"},{"categories":null,"content":"Page1 This is page 1.\n","permalink":"/en/hello/","series":null,"tags":null,"title":"Hello"},{"categories":[],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.— Rob Pike1 Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Italics Bold Code     italics bold code    Code Blocks Code block with backticks \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Fruit  Apple Orange Banana   Dairy  Milk Cheese    Other Elements — abbr, sub, sup, kbd, mark GIFis a bitmap image format.\nH2O\nXn+ Yn= ZnPress CTRL+ALT+Deleteto end the session.\nMost salamandersare nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"/en/posts/markdown-syntax/","series":["User Manual"],"tags":["Markdown","CSS","HTML"],"title":"Markdown Syntax Guide"},{"categories":["Shortcode"],"content":"This article shows how to use the alert shortcode.\n{{\u0026lt; alert \u0026#34;Message\u0026#34; [type] \u0026gt;}}  The parameter type is optional. Default to info.\n Info {{\u0026lt; alert \u0026#34;Info\u0026#34; \u0026gt;}} Info  Success {{\u0026lt; alert \u0026#34;Success\u0026#34; success \u0026gt;}} Success  Warning {{\u0026lt; alert \u0026#34;Warning\u0026#34; warning \u0026gt;}} Warning  Danger {{\u0026lt; alert \u0026#34;Danger\u0026#34; danger \u0026gt;}} Danger ","permalink":"/en/posts/shortcodes/alert/","series":["User Manual"],"tags":["Alert"],"title":"Alert Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Bilibili video shortcode.\nUsage {{\u0026lt; bilibili \u0026#34;video id\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/bilibili/","series":null,"tags":["Bilibili"],"title":"Bilibili Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of CodePen shortcode.\nUsage {{\u0026lt; codepen \u0026#34;id\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/codepen/","series":null,"tags":["CodePen"],"title":"CodePen Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of iQIYI Video shortcode.\nUsage {{\u0026lt; iqiyi \u0026#34;vid\u0026#34; \u0026#34;tvid\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/iqiyi/","series":null,"tags":["iQIYI"],"title":"iQIYI Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of JSFiddle shortcode.\nUsage {{\u0026lt; jsfiddle \u0026#34;user/id\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/jsfiddle/","series":null,"tags":["JSFiddle"],"title":"JSFiddle Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of JSRun shortcode.\nUsage {{\u0026lt; jsrun \u0026#34;id\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/jsrun/","series":null,"tags":["JSRun"],"title":"JSRun Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Netease music shortcode.\nUsage {{\u0026lt; neteasemusic \u0026#34;id\u0026#34; [auto [type]] \u0026gt;}}    Parameter Description     auto The auto controls whether to autoplay. Boolean and optional, default to false.   type The type parameter is optional. Default to 2.    Example  ","permalink":"/en/posts/shortcodes/neteasemusic/","series":null,"tags":["Netease Music"],"title":"Netease Music Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Tencent video shortcode.\nUsage {{\u0026lt; tencentvideo \u0026#34;vid\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/tencentvideo/","series":null,"tags":["Tencent Video"],"title":"Tencent Video Shortcode"},{"categories":["Shortcode"],"content":"A detailed description of Youku shortcode.\nUsage {{\u0026lt; youku \u0026#34;XNTQwMTgxMTE2\u0026#34; \u0026gt;}} Example  ","permalink":"/en/posts/shortcodes/youku/","series":null,"tags":["Youku"],"title":"Youku Video Shortcode"},{"categories":null,"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n Instagram Simple Shortcode {{\u0026lt; instagram_simple BGvuInzyFAe hidecaption \u0026gt;}}  YouTube Privacy Enhanced Shortcode {{\u0026lt; youtube ZJthWmvUzzc \u0026gt;}}  Twitter Simple Shortcode {{\u0026lt; twitter_simple 1085870671291310081 \u0026gt;}}  Vimeo Simple Shortcode {{\u0026lt; vimeo_simple 48912912 \u0026gt;}} ","permalink":"/en/posts/rich-content/","series":null,"tags":["Instagram","YouTube","Twitter","Vimeo","Privacy"],"title":"Rich Content"},{"categories":null,"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt The Van de Graaf Canon Mane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","permalink":"/en/posts/placeholder-text/","series":null,"tags":["Markdown","Text"],"title":"Placeholder Text"},{"categories":null,"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nThis theme supports KaTeX .\n To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files  Note: Use the online reference of Supported TeX Functions Examples $$ (\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…) $$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","permalink":"/en/posts/math-typesetting/","series":null,"tags":["Math"],"title":"Math Typesetting"},{"categories":[],"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes .\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; }","permalink":"/en/posts/emoji-support/","series":null,"tags":["Emoji"],"title":"Emoji Support"},{"categories":null,"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub .\n","permalink":"/en/about/","series":null,"tags":null,"title":"About"}]